========================================
Back to Basics Tasklist and Organization
========================================

.. post:: 2011-11-14
   :author: tychoish
   :tags: org-mode, emacs

I'm a huge fan of emacs' `org-mode <http://orgmode.org/>`__ on so many
levels: as an IDE for knowledge workers, as a task management system, as
a note taking system, and as the ideal basic mode for so many tasks.
However, I've been bucking against org-for a number of tasks recently.
The end result is that I'm becoming less org-dependent. This post is a
reflection on how I've changed the way I work, and how my thinking has
changed regarding org-mode.

Fair warning: this is a really geeky post that has a somewhat
specialized context. If you're lost or bored. check back later in the
week.

The Perils of Org
-----------------

The problem I keep running into with org is that I really don't prefer
to work *in* org-mode. [1]_ Org is great and very flexible, but I don't
like that it means that all text-based work is dependent on emacs. My
brain is already wired for Markdown and reStructured Text from years of
blogging and work projects respectively.

And then there's this organization problem. There are two ways you can
organize content in org-mode. The first is to just dump every thing in
one org-mode file and use the hierarchical outlining to impose
organization to organize everything. The second is to have every project
inside of it's own file and use outlining incidentally as the project
needs it. Content aggregation happens in the agenda.

The problem with the "large files" approach is that you end up with a
small handful of files with thousands of lines and imposing useful
organization is difficult (too many levels and things get buried; not
enough and inevitably your headings aren't descriptive enough and you
get confused. Furthermore, I end up living in
``clone-indirect-buffer-other-window``'d and ``org-narrow-to-subtree``'d
buffers, which is operationally the same as having multiple files it
just takes longer to set up.

The problem with the other approach, having lots of different files, is
that I have a hard time remembering what is in each file, or in
logically splitting big projects into multiple files. The agenda *does*
help with this, but the truth is that the kinds of org-headings for
organization and tasks are not always the same kinds of headings that
make sense for the project itself. I often need more tasks than
organizational divides in a project. I tried this approach a couple of
times, and ended up with useless mush in my files.

Typically, I can never make the "lots of file approach" *really* work,
and the big files problem lead me to general avoidance of *everything*.
Not good. The key to success here is good aggregation tools.

Hodgepodge
----------

In response, I've made a couple of tweaks to how I'm doing... pretty
much everything. That is:

- I've moved most of my open projects into a locally ruining and
  compiling `ikiwiki <http://ikiwiki.info>`__ instance. Both laptops
  have this setup, and there's a central remote to keep both (all?)
  machines in sync.

- I'm using :doc:`/code/ikiwiki-tasklist` to basically replicate the
  functions of ``org-agenda``. Basically this crawls the entire wiki
  looking for lines that begin with certain keywords and generates a
  "todo" page based on these notes. Really simple, incredibly useful
  and it solves much of my aggregation needs.

- I still have some stuff in org-mode: notes for the nearly-finished
  novel, lots of random old (legacy) data, 12 various open tasks, and
  org-capture. I'm thinking of pointing various org-capture templates
  at files in the wiki but haven't gotten there yet.

- I've basically taken the "lots of little files," approach to my
  writing and work. I've not over-leaded the system yet. Each major
  project gets a page in the root level of the wiki for overview and
  planing, and then sub-pages for all related project files (if/as
  needed)

- It turns out that the `markdown-mode
  <http://jblevins.org/projects/markdown-mode/>`__ for emacs has
  gotten a few improvements since the last time I downloaded the file,
  including better support for wiki-links that are *mostly* compatible
  with ikiwiki. Also from the same developer `deft
  <http://jblevins.org/projects/deft/>`__ which implements a pretty
  nifty incremental search for text files in a given directory.  So
  between these tools, ikiwiki, and the ``ikiwiki-tasklist`` there's
  support for the most important things.

- In terms of publishing, beyond ikiwiki for tychoish.com and the
  personal organization instance, I have a couple of other smaller
  wikis (also ikiwiki powered,) and I've been playing with
  `Sphinx <http://sphinx.pocoo.org/>`__ as publishing for more
  structured documents and resources (i.e. documentation, novels, and
  collections,) particularly those that need multiple formats and
  presentations.

I'm sure there will be more shifts in the future, I'm sure. I think this
is a good start. Thoughts?

.. [1] This has pretty much always been the case. I think of it as a
   personal quirk.
