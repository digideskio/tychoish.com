========================
Documentation Maximalism
========================

.. post:: 2013-01-01
   :author: tychoish

You may hear people, particularly people who don't like to write
documentation, something like:

Users need minimalist documentation that only answers their
questions, and there's no point in overwhelming users with bloated,
*maximalist* documentation that they'll never read.

Which sounds great, but doesn't reflect reality or best practice.
Consider the following:

-  Documentation is as much for the producers of the software as it is
for the users. Having extensive documentation contributes too, and
reflects a sane design process. Collecting and curating the
documentation helps ensure that the software is usable and knowable.

-  Having complete documentation reduces support costs, both by reducing
the volume of support requests and by lowering the complexity of the
work associated with support.

-  Good extensive documentation drives adoption of software. Products
with better documentation will always see better adoption than
comparable products with worse documentation.

Without users, software is useless.

Does this mean that you shouldn't value minimalism, particularly
conceptual minimalism, and visual minimalism? Does this mean you should
avoid customizing the documentation to fit the needs and patterns of
your users?

No, of course not.

But minimalism for the sake of minimalism, without a particular strategy
is an *awful* and ill-gotten ideology.

*Even if it looks good*, and *particularly if it sounds good.*

