=====================================================
Issue Tracking and the Health of Open Source Software
=====================================================

.. post:: 2011-09-12
   :author: tychoish
   :tags: free-software, open-source, free-software, productivity, organization, cyberculture, programming

I read something recently that suggested that the health of an open
source project and its community could be largely assessed by reviewing
the status of the bug tracker. I'm still trying to track down the
citation for this remark. This basically says that vital active projects
have regularly updated bugs that are clearly described and that bugs be
easy to search and easy to submit.

I'm not sure that free software communities and projects can be so
easily assessed or that conventional project management practices are
the only meaningful way to judge a project's health. While we're at it,
I don't know that it's terribly useful to focus too much attention or
importance on project management. Having said that, the emergence of
organizational structure is incredibly fascinating, and could probably
tolerate more investigation.

As a starting point, I'd like to offer two conjectures:

- First, that transparent issue tracking is a reasonably effective
means of "customer service," or user support. If the bug tracking
contains answers to questions that people encounter during use, and
provide a way to resolve issues with the software that's productive
and helps with support self-service. Obviously some users and groups
of users are better at this than others.

- Second, issue tracking is perhaps the best way to do bottom-up
project/product management and planning in the open, particularly
since these kinds or projects lack formal procedures and designated
roles to do this kind of organizational work.

While the overriding goal of [[personal task
management\|rhizome/better-task-lists]] is to break things into the
smallest manageable work units, the overriding goal of issue tracking
systems is to track the most intellectually discrete issues within a
single project through the development process. Thus, issue tracking
systems have requirements that are either much less important in
personal systems or actively counter-intuitive for other uses. They are:

- Task assignment, so that specific issues can be assigned different
team members. Ideally this gets a specific developer can "own" a
specific portion of the project and actually be able to work and
coordinate efforts on the project.

- Task prioritization, so that less important or crucial issues get
attention before "nice to have," items are addressed.

- Issue comments and additional attached information, to track progress
and support information sharing among teams, particularly over long
periods of time with asynchronous elements.

While it's nice to be able to integrate tasks and notes (this is really
the core of `org-mode <http://orgmode.org>`__'s strength) issue tracking
systems need to be able to accommodate error output and discussion from
a team on the best solution, as well as discussion about the ideal
solution.

The truth is that a lot of projects don't do a very good job of using
issue tracking systems, despite how necessary and important bug
trackers. The prefabricated systems can be frustrating and difficult to
use, and most of the minimalist systems [1]_ are hard to use in
groups. [2]_ The first person to write a fully featured, lightweight,
and easy to use issue tracking system will be incredibly successful.
Feel free to edit this post or the [[discourse]], if you're aware of a
viable systems along these lines.

.. [1]
I'm thinking about using ikiwiki or org-mode to track issues, but
ditz suffers from the same core problem.

.. [2]
Basically, they either sacrifice structure or concurrency features or
both. Less structured systems rely on a group of people to capture
the same sort of information in a regular way (unlikely) or they
capture less information, neither option is tenable. Without
concurrency (because they store things in single flat files) people
can't use them to manage collaboration, which make them awkward
personal task tracking systems.

