==========================
Treating Users Like Idiots
==========================

.. post:: 2009-04-17
   :author: tychoish
   :tags: cyborg, open-source

People who use free software are almost all "open source/software
freedom advocates" in on sense or another. There's something empowering
about the experience of using software that you *control*, really
control, and we want to share this with others. That makes sense, not
just on a "lets get the family using GNU/Linux" level, that we want to
increase the user base of free software as much as possible.

One of the chief recruiting concerns for communities, seems to be "lets
make this piece of software more usable." This gets us into a lot of
trouble as a community as there are a lot of similar and intersecting
issues that get confused in the project of increasing usability. While
"usable" is a subjective thing in the end, there are a lot of factors
that make software more or less useable, they include:

- greater or lesser functional complexity,
- more or less visual clarity (of control interface and data
visualization,)
- functional and/or visual minimalism,
- thoroughness of documentation and support materials, and
- the learning curve.

One of the most powerful effects of free and open source software is the
way that it encourages users to learn more about the software and
systems they use. We say that one of the reasons for software freedom is
"education," and you might think that this relates to the great
potential for the use of GNU/Linux in schools, but I think it really
relates to the way free software encourages users to learn more about
the software they're running.

Given these notions, I must say that writing software that "even a non
technical user could learn" (dumbing down features and interfaces)
doesn't strike me as a very productive project, and a poor excuse for
providing good documentation and support for a given project.

But maybe that's just me.

